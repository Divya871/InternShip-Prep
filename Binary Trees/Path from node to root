=====TC=O(N),SC=O(1)======
bool rootToNodepath(Node*node,Node*data,vector<Node*>ans
{
  if(node==NULL){return false;}
  if(node->data==data){ans.push_back(node);return true;}
  bool res= rootToNodepath(node->left,data,ans) || rootToNodepath(root->right,data,ans);
  if(res)
  {  ans.push_back(node);  }
  return res;}
  
  =====TC=O(Logn),SC=O(1)=====
  void path_to_root(int node)
{
    // Iterate until root is reached
    while (node >= 1) {
 
        // Print the value of
        // the current node
        cout << node << ' ';
 
        // Move to parent of
        // the current node
        node /= 2;
    }
}
 
     
