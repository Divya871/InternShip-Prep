  int longest_memo(string &s,int I,int J,vector<vector<int>>&dp)
    {      int n=s.length();
          for(int gap=0;gap<n;gap++)
           {
             for(int i=0,j=gap;j<n;i++,j++){
    
        if(i>=j){
             dp[i][j]=(i==j)?1:0;
            continue;
        }
        
        if(s[i]==s[j])
        {
            dp[i][j]=dp[i+1][j-1]+2;
        }
        else
        {
            dp[i][j]=max(dp[i+1][j],dp[i][j-1]);
        }
                        
    }}
    return dp[I][J];}
    
    int minInsertions(string s) {
        int n=s.length();
        vector<vector<int>>dp(n+1,vector<int>(n+1));
        int ans=longest_memo(s,0,n-1,dp);
        return n-ans;
    }
