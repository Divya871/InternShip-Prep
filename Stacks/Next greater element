TC=O(N^2),SC=O(1)

APPROACH- USE 2 loops. For the first loop,pick the elements one by one.FOr the second loop,check if(arr[i]<arr[j), if it is true then update it and break. ELSE simply move.

 vector<long long> nextLargerElement(vector<long long> arr, int n){
        // Your code here
        int next, i, j;
    for (i = 0; i < n; i++)
    {
        next = -1;
        for (j = i + 1; j < n; j++)
        {
            if (arr[i] < arr[j])
            {
                next = arr[j];
                break;
            }
        }
        cout  << next << endl;
    }}



TC=O(n),SC=O(n)

APPROACH---Fill the stack until the top element is greater than than the array elements. When an element greater than the top of the stack is encountered,
put that element at the index of new array where the top element is in the original array till the stack is empty or a larger element is encountered. 
Then push the element in the stack

vector<long long> nextLargerElement(vector<long long> arr, int n){
        // Your code here
        stack<long long>st;
        vector<long long>ans;
        ans.resize(n,-1);
        for(int i=0;i<n;i++)
        {
           while(!st.empty() && arr[st.top()]< arr[i])
           {
               ans[st.top()]=arr[i];
               st.pop();
           }
           
           st.push(i);
        }
        return ans;
    }
