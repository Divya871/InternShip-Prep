 TC=O(N^2),SC=O(N)
 void printNGE(int A[], int n)
{
 
    // Formation of cicular array
    int arr[2 * n];
 
    // Append the given array element twice
    for (int i = 0; i < 2 * n; i++)
        arr[i] = A[i % n];
 
    int next, i, j;

    for (i = 0; i < n; i++) {

        next = -1;
 
        for (j = i + 1; j < 2 * n; j++) {

            if (arr[i] < arr[j]) {
                next = arr[j];
                break;
            }
        }
 
    
        cout << next << ", ";
    }
}

TC=O(n^2),SC=O(1)

void printNGE(int A[], int n)
{
    int k;
    for (int i = 0; i < n; i++) {
      
        k = -1; //
        for (int j = i + 1; j < n + i; j++) {
            if (A[i] < A[j % n]) {
                printf("%d ", A[j % n]);
                k = 1;
                break;
            }
        }
        if (k == -1)
            printf("-1 ");
    }
}
 
 
 
 TC=O(N),SC=O(N)
 vector<int> nextGreaterElements(vector<int>& arr) {
        stack<int>st;
        int n=arr.size();
        vector<int>ans(n,-1);
        for(int i=0;i<2*n;i++)
        {
          while(!st.empty() && arr[st.top()]<arr[i%n])
          {
              ans[st.top()]=arr[i%n];
              st.pop();
          }
            
          if(i<n)
          {st.push(i);}
        }
        return ans;
    }
